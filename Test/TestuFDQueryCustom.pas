unit TestuFDQueryCustom;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, FireDAC.Stan.Error, Data.DB, FireDAC.Stan.Intf, FireDAC.VCLUI.Wait,
  FireDAC.Comp.Client, FireDAC.Stan.Async, FireDAC.UI.Intf, FireDAC.Phys,
  FireDAC.Stan.Option, System.SysUtils, uFDQueryCustom, FireDAC.Stan.Def,
  FireDAC.Phys.FBDef, FireDAC.Phys.FB, FireDAC.Stan.Pool, FireDAC.Phys.Intf;

type
  // Test methods for class TFDQueryCustom

  TestTFDQueryCustom = class(TTestCase)
  strict private
    FFDQueryCustom: TFDQueryCustom;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestAddColuna;
  end;

implementation

procedure TestTFDQueryCustom.SetUp;
begin
  FFDQueryCustom := TFDQueryCustom.Create(nil);
end;

procedure TestTFDQueryCustom.TearDown;
begin
  FFDQueryCustom.Free;
  FFDQueryCustom := nil;
end;

procedure TestTFDQueryCustom.TestAddColuna;
var
  sColuna: String;
  sValorEsperado: string;
  sRetorno: String;
begin
  sColuna := 'COLUNA';
  FFDQueryCustom.TipoQuery := tpSelect;
  FFDQueryCustom.AddColuna(sColuna);
  FFDQueryCustom.AddColuna(sColuna);
  FFDQueryCustom.AddColuna(sColuna);
  FFDQueryCustom.Prepare;

  sRetorno := Trim(FFDQueryCustom.SQL.Text);

  sValorEsperado := 'SELECT COLUNA, COLUNA, COLUNA';
  CheckEquals(sValorEsperado ,sRetorno);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTFDQueryCustom.Suite);
end.

